; PyPower INI file
; used by running:
; mpirun ./pypower test/test1.ini

; Comments are given with semicolons beforehand

; MODEL parameters:
[model]
; give the directory for locating the model files
dir =  models/large

; use the initial condition located in the model "ic.txt" file?
ic = true

; scale the P and Q vectors by some factor
pq_scale=0.5

; scale the load by some factor
load_scale=1.0

; The threshold (line energy) for a line to fail, relative to that line's susceptance value
thresh=  0.065

; The epsilon value, giving the strength of the damping
epsilon= 0.05

; The temperature value "tau"
kt = 0.01

; The seed for the RNG. A value of 0 sets a seed based upon the time.
seed=0

; The length of time to run some initial dynamics to dephase the system
burntime=5

; Remove a line after the initial burn time
remline = 164

; Remove a node after the initial burn time
;remnode = 6

; INTEGRATOR parameters
[integrator]
; The timestep to use, in seconds
timestep = 0.01

; The time to stop the simulation at
stop_time = 100

; Stop the simulation after this-many lines have gone down
stop_lines = 2

; Stop the simulation if the load served is below this value
stop_load = 0.0
; The integration algorithm. LM is advised, Euler also works.
style = lm 

; SAMPLER paramters
[sampler]
; Set the sampler style. Either "trajsampler" or "parrep"
style = trajsampler
; "trajsampler" :: runs multiple trajectories until a condition is met (e.g. for a total length of time)

; "parrep" :: run parallel replica simulation dynamics


[trajsampler]
; Set the options for the trajsampler
; Number of parallel replicas to run
walkers = 1

[output]
; Output directory
dir = test/test1
; How frequently to output data
savefreq = 1
; Whether to append the time to the output directory
appendtime = false
; Save the (omega, theta, V) trajectory?
savetraj = true
; Save the Hamiltonian energy? (Not physical energy)
saveenergy = false  
; Save line energy?
savelineenergy = true
; Save the time value for each frame?
savetime = false
; Save the instantaneous load?
saveload = false
; Save the gamma value (line up = 1, line down = 0)
savegamma= false
; Save a list of line-going-down events, rather than trajectory?
saveevents = false
; Save a graph (experimental!)
savegraph = false




